generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  isAdmin   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([email])
}

model Clinic {
  id        String   @id @default(uuid())
  name      String
  imageUrl  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  doctors Doctor[]
}

model Doctor {
  id        String   @id @default(uuid())
  title     String
  name      String
  imageUrl  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  clinicId     String
  clinic       Clinic        @relation(fields: [clinicId], references: [id])
  schedules    Schedule[]
  appointments Appointment[]
}

model Appointment {
  id         String   @id @default(uuid())
  date       DateTime
  doctorId   String
  doctor     Doctor   @relation(fields: [doctorId], references: [id])
  scheduleId String
  schedule   Schedule @relation(fields: [scheduleId], references: [id])
  patientId  String
  patient    Patient  @relation(fields: [patientId], references: [id])

  @@unique([scheduleId, date, doctorId])
}

model Schedule {
  id        String   @id @default(uuid())
  label     String
  archived  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  doctors      Doctor[]
  appointments Appointment[]
}

model Patient {
  id          String   @id @default(uuid())
  patientName String
  phoneNo     String   @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  appointments Appointment[]
}

model PusherDoctor {
  id       String @id @default(uuid())
  counter  Int    @default(0)
  name     String
  doctorId String
}
